import sys
import platform
import os
import glob
import zipfile


def get_version():
    if len(sys.argv) != 2:
        print("Usage: python get_entity_id.py <Minecraft version>")
        sys.exit(1)
    return sys.argv[1]


def get_jar_path(version):
    if platform.system() == "Windows":
        minecraft_dir = os.path.expanduser("~/AppData/Roaming/.minecraft")
    else:
        minecraft_dir = os.path.expanduser("~/.minecraft")
    return os.path.join(minecraft_dir, "versions", version, f"{version}.jar")


def extract_entity_ids(minecraft_jar_path, minecraft_dir, version):
    extracted_path = os.path.join(minecraft_dir, "versions", version)
    try:
        with zipfile.ZipFile(minecraft_jar_path, "r") as jar:
            jar.extractall(extracted_path)
    except (FileNotFoundError, zipfile.BadZipFile) as e:
        print(f"Error: {e}")
        sys.exit(1)

    entity_names = []
    entity_path = os.path.join(extracted_path, "data/minecraft/loot_table/entities")
    json_files = glob.glob(os.path.join(entity_path, "*.json"))

    for file_path in json_files:
        entity_name = os.path.splitext(os.path.basename(file_path))[0]
        entity_names.append(entity_name)

    return sorted(entity_names)


def save_to_file(entity_names, output_file, version, version_path):
    with open(output_file, "w", encoding="utf-8") as f:
        f.write(f"# Entity ID list of Minecraft version {version}\n")
        f.write(
            f"#   auto-generated by get_entity_id.py as entity_{version_path}.py\n\n"
        )
        for name in entity_names:
            constant_name = name.upper().replace(" ", "_")
            f.write(f'{constant_name} = "{name}"\n')


def main():
    version = get_version()
    version_path = version.replace(".", "_")
    minecraft_jar_path = get_jar_path(version)

    entity_names = extract_entity_ids(
        minecraft_jar_path, os.path.dirname(minecraft_jar_path), version
    )
    script_dir = os.path.dirname(os.path.abspath(__file__))
    file_name = f"entity_{version_path}.py"
    output_file = os.path.join(script_dir, file_name)
    save_to_file(entity_names, output_file, version, version_path)
    print(f"Entity names list has been saved to:\n{output_file}.")


if __name__ == "__main__":
    main()
